@startuml
package course <<Aggregate>> {
    class Course <<Aggregate Root>> {
        id: CourseId
        videos: List<Video>
        examinationId: ExaminationId
        teacherId: TeacherId
        ---
        create(videos: List<Video>, ExaminationId examinationId): Course
        update(videos: List<Video>, ExaminationId examinationId): void
        publish(): void
    }

    class Video <<Value Object>> {
        url: URL
    }

    Course "1" *--> "n" Video
}

package quizBank <<Aggregate>> {
    class QuizBank <<Aggregate Root>> {
        id: QuizBankId
        blankQuizzes: List<BlankQuiz>
        ---
        create(blankQuizzes: List<BlankQuiz>): QuizBank
        update(blankQuizzes: List<BlankQuiz>): void
    }

    class BlankQuiz <<Value Object>> {
        description: String
        referenceAnswer: String
        score: int
        ---
        judge(answer: Answer): void
        getScore(): int
    }

    QuizBank "1" *--> "n" BlankQuiz
}

package paper <<Aggregate>> {
    class Paper <<Aggregate Root>> {
        id: PaperId
        blankQuizzes: List<BlankQuiz>
        teacherId: TeacherId
        ---
        assemble(blankQuizzes: List<BlankQuiz>): Paper
        reassemble(blankQuizzes: List<BlankQuiz>): void
    }

    Paper "1" *--> "n" BlankQuiz
}

package answerSheet <<Aggregate>> {
    class AnswerSheet <<Aggregate Root>> {
        id: AnswerSheetId
        studentId: studentId
        answers: List<Answer>
        totalScore: int
        ---
        sendOut(): AnswerSheet
        submit(answer: Answer): void
        handIn(): void
        review(): int
    }

    class Answer <<Value Object>> {
        answer: String
    }

    AnswerSheet "1" *--> "n" Answer
}

package examination <<Aggregate>> {
    class Examination <<Aggregate Root>> {
        id: ExaminationId
        teacherId: TeacherId
        paperTemplate: PaperTemplate
        answerSheets: List<AnswerSheet>
        dueDate: Date
        timeLimit: Hour
        totalScore: int
        ---
        create(paperTemplate: PaperTemplate): Examination
        start(): AnswerSheet
        end(answerSheet: AnswerSheet): CertificationId
    }

    class PaperTemplate <<Value Object>> {
        blankQuizzes: List<BlankQuiz>
    }

    Examination "1" *--> "1" PaperTemplate
}

package certification <<Aggregate>> {
    class Certification <<Aggregate Root>> {
        id: CertificationId
        ---
        generate(): Certification
    }
}
@enduml